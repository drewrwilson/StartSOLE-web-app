<!DOCTYPE html>
<html>

{{> header}}

<body>

<main style="padding-left: 0px !important;">
  {{{body}}}
</main>

{{> footer}}
<script type="text/javascript" src="https://unpkg.com/parse@1.11.1/dist/parse.min.js"></script>
<script type="text/javascript" src="/js/sole-config.js"></script>
<script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script id="facebook-jssdk" src="https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.10"></script>
<meta name="google-signin-client_id" content="824307770319-v35co4sbfui42q2a93hcccvk68hfpam7.apps.googleusercontent.com">
<script src="https://apis.google.com/js/platform.js?onload=appStart" async defer></script>

<script type="text/javascript">
  function onSignInTEST (data) {
    var access_token = data.getAuthResponse().access_token;

    Parse.Cloud.run('loginGoogleUser', {
        token: access_token
    }).then(Parse.User.become).then(function(user){
        // succesfulLogin(user);
        $('#error').html('Success! Logging you in now...')
        sessionToken = Parse.User.current().getSessionToken();
        sessionToken = sessionToken.slice(2)
        console.log('sessionToken:', sessionToken);
        $('#token').val(sessionToken);
        console.log('submitting foobar with sessionToken: '+ $('#token').val());
        console.log('in 7 seconds... for dramatic flair!');
        $("#foobar").submit()

        });
  }
</script>

<script type="text/javascript">
var auth2; // The Sign-In object.
var googleUser; // The current user.

/**
* Calls startAuth after Sign in V2 finishes setting up.
*/
var appStart = function() {
gapi.load('auth2', initSigninV2);
};

/**
* Initializes Signin v2 and sets up listeners.
*/
var initSigninV2 = function() {
auth2 = gapi.auth2.getAuthInstance()/*.init({
    client_id: '824307770319-v35co4sbfui42q2a93hcccvk68hfpam7',
    'scope': 'https://www.googleapis.com/auth/plus.login'//'profile'
});*/

// Listen for sign-in state changes.
auth2.isSignedIn.listen(signinChanged);

// Listen for changes to current user.
auth2.currentUser.listen(userChanged);

// Sign in the user if they are currently signed in.
if (auth2.isSignedIn.get() == true) {
  auth2.signIn();
}

// Start with the current live values.
refreshValues();
};

/**
* Listener method for sign-out live value.
*
* @param {boolean} val the updated signed out state.
*/
var signinChanged = function (val) {
console.log('Signin state changed to ', val);
// console.log('signed-in-cell ' + val;
};

/**
* Listener method for when the user changes.
*
* @param {GoogleUser} user the updated user.
*/
var userChanged = function (user) {
console.log('User now: ', user);
googleUser = user;
updateGoogleUser();
console.log('curr-user-cell '+
  JSON.stringify(user, undefined, 2));
};

/**
* Updates the properties in the Google User table using the current user.
*/
var updateGoogleUser = function () {
if (googleUser) {
  console.log('user-id ' +
    googleUser.getId());
  console.log('user-scopes ' +
    googleUser.getGrantedScopes());
  console.log('auth-response ' +
    JSON.stringify(googleUser.getAuthResponse(), undefined, 2));
} else {
  console.log('user-id' + '--');
  console.log('user-scopes' + '--');
  console.log('auth-response' + '--');
}
};

/**
* Retrieves the current user and signed in states from the GoogleAuth
* object.
*/
var refreshValues = function() {
if (auth2){
  console.log('Refreshing values...');

  googleUser = auth2.currentUser.get();

  console.log(JSON.stringify(googleUser, undefined, 2))
  console.log(auth2.isSignedIn.get());

  updateGoogleUser();
}
}
</script>

{{!-- <script type="text/javascript">


function onSignIn(googleUser) {
        console.log('success logging in!!')
        // The ID token you need to pass to your backend:
        var id_token = googleUser.getAuthResponse().id_token;
        console.log("ID Token: " + id_token);
        //we need this:
        console.log("access_token: ",  googleUser.getAuthResponse().access_token);

      };

var auth2; // The Sign-In object.
var googleUser; // The current user.

var refreshValues = function() {
  if (auth2){
    console.log('Refreshing values...');

    googleUser = auth2.currentUser.get();

    document.getElementById('curr-user-cell').innerText =
      JSON.stringify(googleUser, undefined, 2);
    document.getElementById('signed-in-cell').innerText =
      auth2.isSignedIn.get();

    updateGoogleUser();
  }
}

function googleInit() {
  gapi.load('auth2', initSigninV2)
  var initSigninV2 = function() {
  auth2 = gapi.auth2.init({
      client_id: '824307770319-v35co4sbfui42q2a93hcccvk68hfpam7',
      scope: 'profile'
    });
  // Listen for changes to current user.
  auth2.currentUser.listen(userChanged);

  var userChanged = function (user) {
    console.log('User now: ', user);
    googleUser = user;
    console.log('user: ', JSON.stringify(user, undefined, 2));
  };



// Listen for changes to current user.
auth2.currentUser.listen(userChanged);

// Sign in the user if they are currently signed in.
if (auth2.isSignedIn.get() == true) {
  auth2.signIn();
}

// Start with the current live values.
refreshValues();



};
}

</script> --}}

<script type="text/javascript" src="/js/login.js"></script>

</body>
</html>
